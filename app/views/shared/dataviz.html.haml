.container
  %hr
  %div.showcase__section#bubble
    %div.spacer.small
    %div#bubbleplots
      %div.bubbleplot{'data-num': 0}
        %div.plot#plotdiv
        %div.control-row
          Statistic:
          %select.statdata


:javascript

  function unpack(rows) {
    return rows.map(function(row) {
      return row;
    });
  }

  var allStatNames = unpack(#{@stat_names}),
    overall = unpack(#{@df['overall'].data}),
    scoringMargin = unpack(#{@df['scoring_margin'].data}),
    listofStats = [],
    currentStat,
    currentSM = [],
    currentFGP = [];

  for (var i = 0; i < allStatNames.length; i++) {
    if (listofStats.indexOf(allStatNames[i]) === -1) {
      listofStats.push(allStatNames[i]);
    }
  }

  function getStatData(chosenStat) {
    currentStat1 = [];
    currentStat2 = [];
    for (var i = 0; i < allStatNames.length; i++) {
      // if (allStatNames[i] === chosenStat) {
        currentStat1.push(overall[i]);
        currentStat2.push(scoringMargin[i]);
      // }
    }
  };

  // Default Stat Data
  setBubblePlot('scoring_margin');

  function setBubblePlot(chosenStat) {
    getStatData(chosenStat);

    var trace1 = {
      x: currentStat1,
      y: currentStat2,
      mode: 'markers',
      marker: {
        size: 12,
        opacity: 0.5
      }
    };

    var data = [trace1];

    var layout = {
      title: 'Correlation between<br>' + chosenStat + ' and conference ranking'
    };

    Plotly.newPlot('plotdiv', data, layout);
  };

  var innerContainer = document.getElementById('bubble'),
    plotEl = innerContainer.querySelector('.plot'),
    teamSelector = innerContainer.querySelector('.statdata');

  function assignOptions(textArray, selector) {
    for (var i = 0; i < textArray.length; i++) {
      var currentOption = document.createElement('option');
      currentOption.text = textArray[i];
      selector.appendChild(currentOption);
    }
  }

  assignOptions(listofStats, teamSelector);

  function updateTeam() {
    setBubblePlot(teamSelector.value);
  }

    teamSelector.addEventListener('change', updateTeam, false);


