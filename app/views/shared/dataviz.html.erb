<div class="container">
  <hr/>
  <div class="showcase__section" id="bubble">
    <div class="spacer small"></div>
    <div id="bubbleplots">
      <div class="bubbleplot" data-num="0">
        <div class="plot" id="plotdiv"></div>
        <div class="control-row">
          Statistic:
          <select class="statdata"></select>
        </div>
      </div>
    </div>
  </div>
  <% if !@hide %>
    <div class="alert-link">
      <%= link_to('win/loss analysis',:controller => :welcome, :action => :'win_loss_viz') %>
    </div>
  <% end %>
</div>
<script>


  function unpack(rows, key) {
    return rows.map(function(row) {
      return row;
    });
  }

  var allStatNames = unpack(<%= raw @df.data.keys %>,0);
  var data = <%= raw @df.data.to_json %>;
  var chosenStat = null;

  function getStatData(chosenStat) {
    currentStat1 = [];
    currentStat2 = [];
    for (var i = 0; i < allStatNames.length ; i++) {
      if (allStatNames[i] === chosenStat) {
        currentStat1.push(<%= @df.data['overall'][:raw] %>);
        currentStat2.push(data[chosenStat]['raw']);
      }
    }
  };

  // Default Stat Data
  if (chosenStat != null){
    setBubblePlot(chosenStat);
    }else{
      setBubblePlot('scoring_margin');
    }

  function setBubblePlot(chosenStat) {
    getStatData(chosenStat);

    var trace1 = {
      x: currentStat1[0],
      y: currentStat2[0],
      text: <%= raw @df.data['team_name'][:raw] %>,
      mode: 'markers',
      marker: {
        size: 12,
        opacity: 0.5
      }
    };

    var data = [trace1];

    var layout = {
      title: 'Correlation between<br>' + chosenStat + ' and conference ranking',
      xaxis: {
        title: 'Ranking'
      },
      yaxis: {
        title: chosenStat
        },
    };

    Plotly.newPlot('plotdiv', data, layout);
  };

  var innerContainer = document.getElementById('bubble'),
    statSelector = innerContainer.querySelector('.statdata');

  function assignOptions(textArray, selector) {
    for (var i = 0; i < textArray.length; i++) {
      var currentOption = document.createElement('option');
      currentOption.text = textArray[i];
      selector.appendChild(currentOption);
    }
  }

  assignOptions(allStatNames, statSelector);

  function updateStat() {
    setBubblePlot(statSelector.value);
  }

    statSelector.addEventListener('change', updateStat, false);




</script>
